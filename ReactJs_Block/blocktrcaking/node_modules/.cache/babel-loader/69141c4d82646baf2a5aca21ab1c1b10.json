{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\53976212857.INFOSCS\\\\Desktop\\\\Block\\\\blocktrcaking\\\\src\\\\Components\\\\MapaDeEquip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport { Map, GoogleApiWrapper } from '@react-google-maps';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar listaLugares = [];\nconst containerStyle = {\n  width: '800px',\n  height: '550px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst center2 = {\n  lat: -23.536240759261585,\n  lng: -46.6462357890093\n};\nconst center3 = {\n  lat: 0,\n  lng: 0\n};\n\nfunction ListarLugares() {\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {}).then(resposta => {\n    if (resposta.status = 200) {\n      listaLugares = resposta.data;\n      return console.console.log(listaLugares);\n    }\n  }).catch(erro => console.log(erro));\n}\n\n_c = ListarLugares;\n\nfunction MyComponent() {\n  _s();\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyCfPgkys_hqQcfea7wLFl9_uZKYsGoHSek\"\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [(ListarLugares, console.log(listaLugares), listaLugares.forEach(element => {\n      center3 = {\n        lat: element.lat,\n        lng: element.lng\n      };\n    })), /*#__PURE__*/_jsxDEV(Marker, {\n      position: center\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: center2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(MyComponent, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c2 = MyComponent;\nexport default MyComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListarLugares\");\n$RefreshReg$(_c2, \"MyComponent\");","map":{"version":3,"sources":["C:/Users/53976212857.INFOSCS/Desktop/Block/blocktrcaking/src/Components/MapaDeEquip.js"],"names":["React","useState","useEffect","Component","Map","GoogleApiWrapper","GoogleMap","Marker","useJsApiLoader","axios","listaLugares","containerStyle","width","height","center","lat","lng","center2","center3","ListarLugares","then","resposta","status","data","console","log","catch","erro","MyComponent","isLoaded","id","googleMapsApiKey","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","forEach","element"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\r\nimport { Map, GoogleApiWrapper } from '@react-google-maps';\r\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\n\r\nvar listaLugares = []\r\nconst containerStyle = {\r\n  width: '800px',\r\n  height: '550px'\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n\r\nconst center2 = {\r\n  lat: -23.536240759261585,\r\n  lng: -46.6462357890093\r\n};\r\n\r\nconst center3 = {\r\n  lat: 0,\r\n  lng: 0\r\n};\r\n\r\nfunction ListarLugares(){\r\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {\r\n\r\n  }).then(resposta => {\r\n    if(resposta.status = 200){\r\n      listaLugares = (resposta.data);\r\n      return console.console.log(listaLugares);\r\n    }\r\n  })\r\n  .catch(erro => console.log(erro))\r\n}\r\n\r\nfunction MyComponent() {\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyCfPgkys_hqQcfea7wLFl9_uZKYsGoHSek\"\r\n  })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  return isLoaded ? (\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        { /* Child components, such as markers, info windows, etc. */ }\r\n        {\r\n        ListarLugares,\r\n        console.log(listaLugares),\r\n        listaLugares.forEach(element => {\r\n          center3 = {\r\n            lat: element.lat,\r\n            lng: element.lng\r\n          };\r\n        })\r\n      }\r\n        <Marker position={center}/>\r\n        <Marker position={center2}/>\r\n        <>\r\n        </>\r\n      </GoogleMap>\r\n  ) : <></>\r\n}\r\n\r\nexport default MyComponent"]},"metadata":{},"sourceType":"module"}