{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\53976212857.INFOSCS\\\\Desktop\\\\Block\\\\blocktrcaking\\\\src\\\\Components\\\\MapaDeEquip.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react@';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.state = {\n      listaLugares: [],\n      stores: [listaLugares]\n    };\n  }\n\n  ListarLugares() {\n    axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {}).then(resposta => {\n      if (resposta.status === 200) {\n        this.state.listaLugares = resposta.data;\n        return console.log(this.listaLugares);\n      }\n    }).catch(erro => console.log(erro));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      zoom: 7,\n      initialCenter: {\n        lat: -27.0922364,\n        lng: -52.6166878\n      },\n      children: [this.ListarLugares(), this.displayMarkers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default GoogleApiWrapper(props => ({\n  apiKey: 'AIzaSyBgRGin6VVFS1C-HIGLucZebgcEJuJduAg'\n}))(MapContainer);","map":{"version":3,"sources":["C:/Users/53976212857.INFOSCS/Desktop/Block/blocktrcaking/src/Components/MapaDeEquip.js"],"names":["React","useState","useEffect","Component","Map","GoogleApiWrapper","GoogleMap","Marker","useJsApiLoader","axios","MapContainer","constructor","props","displayMarkers","state","stores","map","store","index","lat","latitude","lng","longitude","listaLugares","ListarLugares","then","resposta","status","data","console","log","catch","erro","render","google","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,oBAAtC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,cAA5B,QAAkD,wBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAE1CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,cArBmB,GAqBF,MAAM;AACrB,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C,4BAAO,QAAC,MAAD;AAAoB,UAAA,EAAE,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAE;AAC9CC,YAAAA,GAAG,EAAEF,KAAK,CAACG,QADmC;AAE9CC,YAAAA,GAAG,EAAEJ,KAAK,CAACK;AAFmC;AAAzC,WAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKD,OANM,CAAP;AAOD,KA7BkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXS,MAAAA,YAAY,EAAG,EADJ;AAEXR,MAAAA,MAAM,EAAE,CACNQ,YADM;AAFG,KAAb;AAKD;;AAGDC,EAAAA,aAAa,GAAG;AACdf,IAAAA,KAAK,CAAC,qDAAD,EAAwD,EAAxD,CAAL,CACGgB,IADH,CACQC,QAAQ,IAAI;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,aAAKb,KAAL,CAAWS,YAAX,GAA2BG,QAAQ,CAACE,IAApC;AACA,eAAOC,OAAO,CAACC,GAAR,CAAY,KAAKP,YAAjB,CAAP;AACD;AACF,KAND,EAOGQ,KAPH,CAOSC,IAAI,IAAIH,OAAO,CAACC,GAAR,CAAYE,IAAZ,CAPjB;AAQD;;AAYDC,EAAAA,MAAM,GAAG;AACP,wBAEE,QAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWsB,MADrB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,aAAa,EAAE;AAAEf,QAAAA,GAAG,EAAE,CAAC,UAAR;AAAoBE,QAAAA,GAAG,EAAE,CAAC;AAA1B,OAHjB;AAAA,iBAKG,KAAKG,aAAL,EALH,EAMG,KAAKX,cAAL,EANH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAYD;;AA9CyC;AAiD5C,eAAeR,gBAAgB,CAC5BO,KAAD,KAAY;AACVuB,EAAAA,MAAM,EAAE;AADE,CAAZ,CAD6B,CAAhB,CAIVzB,YAJU,CAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react@';\r\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\n\r\nexport class MapContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listaLugares : [],\r\n      stores: [\r\n        listaLugares]\r\n    }\r\n  }\r\n\r\n\r\n  ListarLugares() {\r\n    axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {\r\n    }).then(resposta => {\r\n      if (resposta.status === 200) {\r\n        this.state.listaLugares = (resposta.data);\r\n        return console.log(this.listaLugares)\r\n      }\r\n    })\r\n      .catch(erro => console.log(erro));\r\n  }\r\n\r\n  displayMarkers = () => {\r\n    return this.state.stores.map((store, index) => {\r\n      return <Marker key={index} id={index} position={{\r\n        lat: store.latitude,\r\n        lng: store.longitude\r\n      }}\r\n      />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={7}\r\n        initialCenter={{ lat: -27.0922364, lng: -52.6166878 }}\r\n      >\r\n        {this.ListarLugares()}\r\n        {this.displayMarkers()}\r\n      </Map>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper(\r\n  (props) => ({\r\n    apiKey: 'AIzaSyBgRGin6VVFS1C-HIGLucZebgcEJuJduAg',\r\n  }\r\n  ))(MapContainer)"]},"metadata":{},"sourceType":"module"}