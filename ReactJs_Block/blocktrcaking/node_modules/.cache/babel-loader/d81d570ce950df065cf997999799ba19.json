{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\53976212857.INFOSCS\\\\Desktop\\\\Block\\\\blocktrcaking\\\\src\\\\Components\\\\MapaDeEquip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '800px',\n  height: '550px'\n};\nvar listaLugares = [];\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction ListarLugares() {\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {}).then(resposta => {\n    if (resposta.status === 200) {\n      listaLugares = resposta.data;\n      return console.log(listaLugares);\n    }\n  }).catch(erro => console.log(erro));\n}\n\n_c = ListarLugares;\n\nfunction MyComponent() {\n  _s();\n\n  ListarLugares();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyCfPgkys_hqQcfea7wLFl9_uZKYsGoHSek\"\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [(console.log(listaLugares), listaLugares.forEach(x => {\n      const center3 = {\n        lat: x.lat,\n        lng: x.lng\n      };\n      console.log(center3);\n      const center2 = {\n        lat: -23.53255315178476,\n        lng: -46.647644117756045\n      };\n\n      /*#__PURE__*/\n      _jsxDEV(Marker, {\n        position: center3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this);\n    })), /*#__PURE__*/_jsxDEV(Marker, {\n      position: center\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(MyComponent, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c2 = MyComponent;\nexport default MyComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListarLugares\");\n$RefreshReg$(_c2, \"MyComponent\");","map":{"version":3,"sources":["C:/Users/53976212857.INFOSCS/Desktop/Block/blocktrcaking/src/Components/MapaDeEquip.js"],"names":["React","useState","useEffect","GoogleMap","Marker","useJsApiLoader","axios","containerStyle","width","height","listaLugares","center","lat","lng","ListarLugares","then","resposta","status","data","console","log","catch","erro","MyComponent","isLoaded","id","googleMapsApiKey","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","forEach","x","center3","center2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst containerStyle = {\r\n  width: '800px',\r\n  height: '550px'\r\n};\r\n\r\nvar listaLugares = [];\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n\r\n\r\nfunction ListarLugares() {\r\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {\r\n      }).then(resposta => {\r\n          if (resposta.status === 200) {\r\n            listaLugares = (resposta.data);\r\n            return console.log(listaLugares)\r\n          }\r\n      })\r\n          .catch(erro => console.log(erro));\r\n}\r\n\r\nfunction MyComponent() {\r\n  ListarLugares()\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyCfPgkys_hqQcfea7wLFl9_uZKYsGoHSek\"\r\n  })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    map.fitBounds(bounds);\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={10}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      { /* Child components, such as markers, info windows, etc. */}\r\n\r\n      {\r\n        console.log(listaLugares),\r\n        listaLugares.forEach(x => {\r\n          const center3 = {\r\n            lat: x.lat,\r\n            lng: x.lng,\r\n          };\r\n          console.log(center3);\r\n          const center2 = {\r\n            lat: -23.53255315178476,\r\n            lng: -46.647644117756045\r\n          };\r\n          <Marker position={center3} />\r\n        })\r\n      }\r\n      <Marker position={center} />\r\n    </GoogleMap>\r\n  ) : <></>\r\n}\r\n\r\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}