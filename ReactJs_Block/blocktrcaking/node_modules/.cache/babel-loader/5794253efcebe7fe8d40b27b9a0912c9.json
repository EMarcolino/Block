{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\53976212857.INFOSCS\\\\Desktop\\\\Block\\\\blocktrcaking\\\\src\\\\Components\\\\MapaDeEquip.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListarLugares() {\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {}).then(resposta => {\n    if (resposta.status === 200) {\n      listaLugares = resposta.data;\n      return console.log(listaLugares);\n    }\n  }).catch(erro => console.log(erro));\n}\n\n_c = ListarLugares;\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.state = {\n      stores: [{\n        latitude: -26.9853947,\n        longitude: -52.603549,\n        local: \"Cordilheira Alta\"\n      }, {\n        latitude: -26.9605363,\n        longitude: -52.5335505,\n        local: \"Xaxim\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: this.props.google,\n      zoom: 7,\n      initialCenter: {\n        lat: -27.0922364,\n        lng: -52.6166878\n      },\n      children: this.displayMarkers()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default GoogleApiWrapper(props => ({\n  apiKey: 'AQUI VAI A SUA KEY'\n}))(MapContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListarLugares\");","map":{"version":3,"sources":["C:/Users/53976212857.INFOSCS/Desktop/Block/blocktrcaking/src/Components/MapaDeEquip.js"],"names":["React","useState","useEffect","Component","Map","GoogleApiWrapper","GoogleMap","Marker","useJsApiLoader","axios","ListarLugares","then","resposta","status","listaLugares","data","console","log","catch","erro","MapContainer","constructor","props","displayMarkers","state","stores","map","store","index","lat","latitude","lng","longitude","local","render","google","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,cAA5B,QAAkD,wBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,aAAT,GAAyB;AACvBD,EAAAA,KAAK,CAAC,qDAAD,EAAwD,EAAxD,CAAL,CACGE,IADH,CACQC,QAAQ,IAAI;AAClB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,YAAY,GAAIF,QAAQ,CAACG,IAAzB;AACA,aAAOC,OAAO,CAACC,GAAR,CAAYH,YAAZ,CAAP;AACD;AACF,GAND,EAOGI,KAPH,CAOSC,IAAI,IAAIH,OAAO,CAACC,GAAR,CAAYE,IAAZ,CAPjB;AAQD;;KATQT,a;AAWT,OAAO,MAAMU,YAAN,SAA2BjB,SAA3B,CAAqC;AAE1CkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,cAVmB,GAUF,MAAM;AACrB,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C,4BAAO,QAAC,MAAD;AAAoB,UAAA,EAAE,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAE;AAC9CC,YAAAA,GAAG,EAAEF,KAAK,CAACG,QADmC;AAE9CC,YAAAA,GAAG,EAAEJ,KAAK,CAACK;AAFmC;AAAzC,WAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKD,OANM,CAAP;AAOD,KAlBkB;;AAGjB,SAAKJ,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CACN;AAAEK,QAAAA,QAAQ,EAAE,CAAC,UAAb;AAAyBE,QAAAA,SAAS,EAAE,CAAC,SAArC;AAAgDC,QAAAA,KAAK,EAAE;AAAvD,OADM,EAEN;AAAEH,QAAAA,QAAQ,EAAE,CAAC,UAAb;AAAyBE,QAAAA,SAAS,EAAE,CAAC,UAArC;AAAiDC,QAAAA,KAAK,EAAE;AAAxD,OAFM;AADG,KAAb;AAKD;;AAYDC,EAAAA,MAAM,GAAG;AACP,wBAEE,QAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MADrB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,aAAa,EAAE;AAAEN,QAAAA,GAAG,EAAE,CAAC,UAAR;AAAoBE,QAAAA,GAAG,EAAE,CAAC;AAA1B,OAHjB;AAAA,gBAMG,KAAKR,cAAL;AANH;AAAA;AAAA;AAAA;AAAA,YAFF;AAYD;;AAnCyC;AAsC5C,eAAelB,gBAAgB,CAC5BiB,KAAD,KAAY;AACVc,EAAAA,MAAM,EAAE;AADE,CAAZ,CAD6B,CAAhB,CAIVhB,YAJU,CAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nfunction ListarLugares() {\r\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {\r\n  }).then(resposta => {\r\n    if (resposta.status === 200) {\r\n      listaLugares = (resposta.data);\r\n      return console.log(listaLugares)\r\n    }\r\n  })\r\n    .catch(erro => console.log(erro));\r\n}\r\n\r\nexport class MapContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stores: [\r\n        { latitude: -26.9853947, longitude: -52.603549, local: \"Cordilheira Alta\" },\r\n        { latitude: -26.9605363, longitude: -52.5335505, local: \"Xaxim\" },]\r\n    }\r\n  }\r\n\r\n  displayMarkers = () => {\r\n    return this.state.stores.map((store, index) => {\r\n      return <Marker key={index} id={index} position={{\r\n        lat: store.latitude,\r\n        lng: store.longitude\r\n      }}\r\n      />\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={7}\r\n        initialCenter={{ lat: -27.0922364, lng: -52.6166878 }}\r\n      >\r\n\r\n        {this.displayMarkers()}\r\n      </Map>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper(\r\n  (props) => ({\r\n    apiKey: 'AQUI VAI A SUA KEY',\r\n  }\r\n  ))(MapContainer)"]},"metadata":{},"sourceType":"module"}