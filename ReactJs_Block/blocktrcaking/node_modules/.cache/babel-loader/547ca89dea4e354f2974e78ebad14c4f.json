{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\53976212857.INFOSCS\\\\Desktop\\\\Block\\\\blocktrcaking\\\\src\\\\Components\\\\MapaDeEquip.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"90%\",\n  height: '90%'\n};\nvar i = 0; //lista das cordenadas que recebo da api\n\nvar listaLugares = []; //lugar que vai ser passado ao marcador\n\nvar center3 = {\n  lat: 0,\n  lng: 0\n}; //local na fortaleza colocado a mão\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n}; //local em sp colocado a mão\n\nconst center2 = {\n  lat: -23.53255315178476,\n  lng: -46.647644117756045\n}; //chamada da api mockada e inserção na lista\n\nfunction ListarLugares() {\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {}).then(resposta => {\n    if (resposta.status === 200) {\n      listaLugares = resposta.data;\n      return console.log(listaLugares);\n    }\n  }).catch(erro => console.log(erro));\n}\n\n_c = ListarLugares;\n\nfunction MyComponent() {\n  _s();\n\n  ListarLugares();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyBgRGin6VVFS1C-HIGLucZebgcEJuJduAg\"\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    marker = new map.Marker();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []); // var marker, i;\n  // for (i = 0; i < listaLugares.length; i++) {\n  //   console.log(listaLugares[i].lat);\n  //   Marker = new window.google.maps.Marker({\n  //     position: new window.google.maps.LatLng(\n  //       listaLugares[i].lat,\n  //       listaLugares[i].lng\n  //     ),\n  //     map: map\n  //   })}\n\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [(console.log(listaLugares), listaLugares.forEach(element => {\n      center3 = {\n        lat: element.lat,\n        lng: element.lng\n      };\n      console.log(center3);\n\n      /*#__PURE__*/\n      _jsxDEV(Marker, {\n        position: center3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    })), /*#__PURE__*/_jsxDEV(Marker, {\n      position: center2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: center\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(MyComponent, \"sc/DS85Udqb0HC94DVNruSImuio=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c2 = MyComponent;\nexport default MyComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListarLugares\");\n$RefreshReg$(_c2, \"MyComponent\");","map":{"version":3,"sources":["C:/Users/53976212857.INFOSCS/Desktop/Block/blocktrcaking/src/Components/MapaDeEquip.js"],"names":["React","useState","useEffect","GoogleMap","Marker","useJsApiLoader","axios","containerStyle","width","height","i","listaLugares","center3","lat","lng","center","center2","ListarLugares","then","resposta","status","data","console","log","catch","erro","MyComponent","isLoaded","id","googleMapsApiKey","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","marker","fitBounds","onUnmount","forEach","element"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\r\nimport axios from 'axios';\r\n\r\nconst containerStyle = {\r\n  width: \"90%\",\r\n  height: '90%',\r\n};\r\n\r\nvar i = 0;\r\n//lista das cordenadas que recebo da api\r\nvar listaLugares = [];\r\n\r\n//lugar que vai ser passado ao marcador\r\nvar center3 = {\r\n  lat: 0,\r\n  lng: 0\r\n};\r\n\r\n//local na fortaleza colocado a mão\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n//local em sp colocado a mão\r\nconst center2 = {\r\n  lat: -23.53255315178476,\r\n  lng: -46.647644117756045\r\n};\r\n\r\n//chamada da api mockada e inserção na lista\r\nfunction ListarLugares() {\r\n  axios('https://623d99bee8fbc4f16264b76d.mockapi.io/Lugares', {\r\n  }).then(resposta => {\r\n    if (resposta.status === 200) {\r\n      listaLugares = (resposta.data);\r\n      return console.log(listaLugares)\r\n    }\r\n  })\r\n    .catch(erro => console.log(erro));\r\n}\r\n\r\nfunction MyComponent() {\r\n  ListarLugares()\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: \"AIzaSyBgRGin6VVFS1C-HIGLucZebgcEJuJduAg\"\r\n  })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    marker = new map.Marker\r\n    map.fitBounds(bounds);\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, [])\r\n\r\n  // var marker, i;\r\n\r\n  // for (i = 0; i < listaLugares.length; i++) {\r\n  //   console.log(listaLugares[i].lat);\r\n  //   Marker = new window.google.maps.Marker({\r\n  //     position: new window.google.maps.LatLng(\r\n  //       listaLugares[i].lat,\r\n  //       listaLugares[i].lng\r\n  //     ),\r\n  //     map: map\r\n  //   })}\r\n\r\n    return isLoaded ? (\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        { /* Child components, such as markers, info windows, etc. */}\r\n        {\r\n          console.log(listaLugares),\r\n          listaLugares.forEach(element => {\r\n            center3 = {\r\n              lat: element.lat,\r\n              lng: element.lng\r\n            }\r\n            console.log(center3);\r\n            <Marker position={center3} />\r\n          })\r\n        }\r\n        <Marker position={center2} />\r\n        <Marker position={center} />\r\n      </GoogleMap>\r\n    ) : <></>\r\n  }\r\n\r\n  export default MyComponent;"]},"metadata":{},"sourceType":"module"}